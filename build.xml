<project xmlns:ivy="antlib:org.apache.ivy.ant" name="browse-engine" default="dist" basedir=".">
	<property name="bobo.root" location="." />
	<property name="dist" location="${bobo.root}/dist" />
	
	<property name="doc" location="${bobo.root}/doc"/>
	<property name="eclipse.output" location="${bobo.root}/output"/>	
	<property name="lib" location="lib" />
	<property name="lib.master" location="${lib}/master" />
	<property name="lib.solr" location="${lib}/solr" />
	
	<property name="bobo-browse" value="bobo-browse"/>
	<property name="bobo-service" value="bobo-service"/>
	<property name="bobo-solr" value="bobo-solr"/>
	<property name="bobo-perf" value="bobo-perf"/>

	<property name="bobo-bench" value="bobo-bench"/>
	<property name="logs" value="logs"/>	
	<property name="tools-build" value="tools-build" />
	<property name="bobo-tools" value="bobo-tools"/>
	
	<property name="resource" location="resource" />
	<property name="spring-conf" location="spring-conf" />
	<property name="settings" location="settings" />
		

	<property name="test" value="test"/>
	<property name="build.test" value="build-test"/>
	
	<property name="jetty.home" location="${lib}/jetty" />
	<property name="lib.test" location="${lib}/test" />
	
	<property name="test.report.dir" location="${dist}/junit-reports" />
        <property name="cubertura.report.dir" location="${dist}/cubertura-reports" />
	
	<property name="test.html.dir" location="${test.report.dir}/html" />
	
	<property name="cardata" value="cardata" />
	<property name="carindex" value="${cardata}/cartag"/>
	
	<property file="${bobo.root}/version.properties" />
	<property file="${bobo.root}/${bobo-solr}/solr.properties" />
	
	 <property name="ivy.install.version" value="2.0.0-beta1"/>
	 <property name="ivy.jar.dir" value="${basedir}/ivy"/>
	 <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

	<property name="cobertura.dir" value="${lib.master}" />
	
	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="log4j.jar" />
			<include name="asm*.jar" />
                        <include name="oro.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		
	<target name="init" depends="resolve">
		<mkdir dir="${dist}" />
		<mkdir dir="${build.test}" />
	</target>
	
	<target name="clean">
		<delete dir="${tools-build}" />
		<delete dir="${build.test}"/>
		<delete dir="${dist}"/>
		<delete dir="${logs}"/>
		<delete dir="${doc}"/>
		<delete dir="${eclipse.output}"/>
		<delete file="cardemo/cars.war"/>
		<ant antfile="build.xml"
			 dir="${bobo-browse}" target="clean"/>
		<ant antfile="build.xml"
			 dir="${bobo-service}" target="clean"/>
		<ant antfile="build.xml"
					 dir="${bobo-solr}" target="clean"/>
		<ant antfile="build.xml"
					 dir="${bobo-perf}" target="clean"/>
    </target>
	
	
	
	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}"/>
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

	<target name="perf" depends="jars">
			<ant antfile="build.xml"
			dir="${bobo-perf}" target="perf"/>
		</target>

	<target name="resolve" description="--> retrieve dependencies with ivy" depends="install-ivy">
	    <ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact].[ext]" />
	</target>

	<target name="dist" depends="jars">
		<ant antfile="build.xml"
			 dir="${bobo-browse}" target="javadoc" />
	</target>

        <target name="bobo-browse-jar" depends="init" description="--> build bobo-browse.jar">
                <ant antfile="build.xml"
                         dir="${bobo-browse}" target="dist"/>
        </target>
        <target name="bobo-solr-jar" depends="init">
                <ant antfile="build.xml" dir="${bobo-solr}" target="dist" />
        </target>
	
	<target name="jars" depends="init,bobo-browse-jar,bobo-solr-jar">
		<ant antfile="build.xml"
			 dir="${bobo-service}" target="dist"/>
		     <!--
		<ant antfile="build.xml"
				     dir="${bobo-gwt}" target="dist" />
				     -->
	</target>

	<target name="deploy-bobo-browse" depends="init,bobo-browse-jar" description="--> deploy .jar to oss repo">
		<exec executable="mvn">
			<arg line="deploy:deploy-file -Durl=https://oss.sonatype.org/content/repositories/snapshots -DrepositoryId=sonatype-nexus-snapshots -Dfile=${dist}/bobo-browse-${version}.jar -DpomFile=bobo-browse-pom.xml"/>
		</exec>
	</target>

	<target name="deploy-bobo-solr" depends="init,bobo-browse-jar,bobo-solr-jar" description="--> deploy .jar to oss repo">
		<exec executable="mvn">
			<arg line="deploy:deploy-file -Durl=https://oss.sonatype.org/content/repositories/snapshots -DrepositoryId=sonatype-nexus-snapshots -Dfile=${dist}/bobo-solr-${version}.jar -DpomFile=bobo-solr-pom.xml"/>
		</exec>
	</target>
	
	<target name="deploy-solr" depends="jars">
	    <echo message="deploying to ${solr.home} ... "/>
	    <mkdir dir="${solr.home}/solr/lib" />
	    <copy todir="${solr.home}/solr/lib">
	      <fileset dir="${dist}">
	        <include name="bobo-browse*.jar" />
	        <include name="bobo-solr*.jar" />
	      </fileset>
	      <fileset dir="${lib.master}">
	        <include name="log4j.jar" />
	        <include name="fastutil.jar" />
	        <include name="spring.jar" />
	        <include name="kamikaze*.jar" />
	      </fileset>
	    </copy>
	</target>
	
	<target name="javadoc">
		<ant antfile="build.xml"
			 dir="${bobo-browse}" target="javadoc" />
	</target>		
	
	<path id="tools.class.path">
	            <fileset dir="${lib.master}">
	                <include name="*.jar"/>
				</fileset>
				<fileset dir="${dist}">
	                <include name="bobo-browse-${version}.jar"/>
		        </fileset>
		</path>
	
	<target name="create-ui">
		<mkdir dir="${tools-build}"/>
		<javac srcdir="${bobo-tools}/src" destdir="${tools-build}">
			<classpath refid="tools.class.path"/>
		</javac>
		
		<typedef name="makeui" classname="com.browseengine.bobo.tools.ui.MakeUITask">
		         <classpath>
		         	<pathelement path="${tools-build}"/>
		         	<path  refid="tools.class.path" />
				 </classpath>
		</typedef>
		
		<makeui name="${ui.name}" url="/bobo/browse.form" output="${ui.out}" indexDir="${ui.idx.dir}"/>
		

	    <copy file="${settings}/paths.properties" todir="${resource}" />
	    <replace file="${resource}/paths.properties" token="@bobo.root@" value="${bobo.root}" />
	    <replace file="${resource}/paths.properties" token="@maxdoc@" value="1000000" />
	    	
		<war destfile="${ui.out}/${ui.name}.war" webxml="${resource}/web.xml">
			  <fileset dir="${ui.out}/${ui.name}/"/>
			  <lib dir="${dist}">
			    <include name="bobo-*.jar"/>
			  </lib>
			  <lib dir="${lib.master}" excludes="servlet-api.jar">
			    <include name="*.jar"/>
			  </lib>
			  <lib dir="${lib}/solr">
			    <include name="solr-solrj*.jar"/>
			  </lib>
			  <classes dir="${resource}" excludes="web.xml" />
			  <classes dir="${spring-conf}"/>
			  <webinf dir="dwr" />
			<fileset dir="cardemo/webapp/" />
		</war>
		
		<delete file="${resource}/paths.properties"/>
		<!-- <delete dir="${ui.out}/${ui.name}"/>-->
	</target>
	
	<target name="build-ui">
		<!-- build tools -->
		
		<input message="Name: " addproperty="demo.name"/>
		<input message="Index location: " addproperty="demo.idx.dir" />
		<input message="Output Directory: " defaultvalue="${demo.name}" addproperty="demo.out" />
		
		<antcall target="create-ui">
			<param name="ui.name" value="${demo.name}"/>
			<param name="ui.out" value="${demo.out}"/>
			<param name="ui.idx.dir" value="${demo.idx.dir}"/>
		</antcall>
	</target>
	
	<target name="make-car-war" description="==> make-car-war" unless="${car.war.exists}">
		<mkdir dir="cardemo/cars" />
		<antcall target="create-ui">
			<param name="ui.name" value="cars"/>
			<param name="ui.out" value="cardemo"/>
			<param name="ui.idx.dir" value="cardata/cartag"/>
		</antcall>
		<delete dir="cardemo/cars" />
	</target>
	
	<target name="run-cardemo" description="==> run car demo" depends="dist,make-car-war" > 
		<mkdir dir="${logs}" />
		<java fork="true" jar="${bobo.root}/zoie-server-2.0.0.jar" failonerror="true" maxmemory="1000m">
								<sysproperty key="log.home" value="${logs}" />
								<sysproperty key="conf.dir" value="${resource}" />
								<jvmarg value="-server" />
								<jvmarg value="-Dcom.sun.management.jmxremote" />
								<jvmarg value="-Dcom.sun.management.jmxremote.port=9999" />
								<jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false" />
								<jvmarg value="-Dcom.sun.management.jmxremote.ssl=false" />
								<!-- for debugging 
								<jvmarg value="-Xdebug -Xnoagent"/>
								<jvmarg value="-Djava.compiler=NONE"/> 
								<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8886,server=y,suspend=y"/>
								-->
								
								<!-- uncomment to turn on yourkit profiling
								<jvmarg value="-agentlib:yjpagent" />
								-->
		</java>
	</target>
	
	<target name="run-server"> 
		<mkdir dir="${logs}" />
		<java fork="true" jar="${bobo.root}/zoie-server-2.0.0.jar" failonerror="true" maxmemory="1000m">
								<sysproperty key="log.home" value="${logs}" />
								<sysproperty key="conf.dir" value="${resource}" />
								<jvmarg value="-server" />
								<jvmarg value="-Dcom.sun.management.jmxremote" />
								<jvmarg value="-Dcom.sun.management.jmxremote.port=9999" />
								<jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false" />
								<jvmarg value="-Dcom.sun.management.jmxremote.ssl=false" />
								<!-- for debugging 
								<jvmarg value="-Xdebug -Xnoagent"/>
								<jvmarg value="-Djava.compiler=NONE"/> 
								<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8886,server=y,suspend=y"/>
								-->
								
								<!-- uncomment to turn on yourkit profiling
								<jvmarg value="-agentlib:yjpagent" />
								-->
		</java>
	</target>
	
	
	<path id="test.compile.class.path">
			<fileset dir="${lib.master}">
				<include name="*.jar" />
			</fileset>
		    <fileset dir="${lib.solr}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.test}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${dist}">
				<include name="*.jar" />
			</fileset>
		    <pathelement path="${resource}"/>
	</path>
	

	<target name="cmdline" depends="jars">
		<java classname="com.browseengine.bobo.client.BoboCmdlineApp">
			<classpath refid="test.compile.class.path"/>
			<arg value="/Users/jwang/opensource/chopchop/data/index/beef" />
		</java>
	</target>
				
	<target name="test-build" depends="bobo-browse-jar,cobertura-instrument,bobo-solr-jar">
		<javac destdir="${build.test}">
            <src path="${test}"/>
            <classpath refid="test.compile.class.path"/>
        </javac>
		<jar destfile="${dist}/bobo-test.jar"  basedir="${build.test}" />
	</target>
	
	<target name="cobertura-instrument" description="instrumentation for cobertura">
		<delete file="cobertura.ser" />
		<cobertura-instrument>
			<ignore regex="org.apache.log4j.*" />
			<ignore regex="org.objectweb.*" />
			<fileset dir="${dist}">
				<include name="bobo-browse-2.5.2-SNAPSHOT.jar" />
			</fileset>
		</cobertura-instrument>
	</target>
	<target name="test" description="Runs JUnit Tests" depends="test-build">
		<echo>=== Running JUnit Tests ===</echo>
		<mkdir dir="${test.report.dir}" />
		<mkdir dir="${test.html.dir}" />
		<junit printsummary="yes" showoutput="yes">
			<sysproperty key="log.home" value="${logs}" />
                        <sysproperty key="conf.dir" value="${resource}" />
			<sysproperty key="log4j.configuration" value="${log4j.configuration}" />

		    <!-- classpath must include all jar dependencies and classes -->
			<classpath refid="test.compile.class.path" />
			<classpath refid="cobertura.classpath" />
			
		<sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser" />
	      	<!-- formatter to use for output -->
        	<formatter type="xml"/>
	        <batchtest fork="yes" todir="${test.report.dir}">
	          <fileset dir="${test}/src">
	             <include name="**/UnitTestSuite.java" />
	          </fileset>
	        </batchtest>
		</junit>
		<junitreport todir="${test.html.dir}">
		  <fileset dir="${test.report.dir}">
		    <include name="TEST-*.xml" />
		  </fileset>
		  <report todir="${test.html.dir}" format="frames" />
		</junitreport>
	</target>
	<target name="cobertura-report" description="cobertura-report" depends="test">
		<cobertura-report format="html" destdir="${cubertura.report.dir}/html">
			<fileset dir="${basedir}/bobo-browse/src">
				<include name="com/browseengine/bobo/**/*.java" />
				<exclude name="com/browseengine/bobo/protobuf/**/*.java" />
                                <exclude name="com/browseengine/bobo/service/**/*.java" />
			</fileset>
		</cobertura-report>
                <cobertura-report format="xml" destdir="${cubertura.report.dir}/xml">
                        <fileset dir="${basedir}/bobo-browse/src">
                                <include name="com/browseengine/bobo/**/*.java" />
                                <exclude name="com/browseengine/bobo/protobuf/**/*.java" />
                                <exclude name="com/browseengine/bobo/service/**/*.java" />
                        </fileset>
                </cobertura-report>
	</target>
	<target name="lucene-test" description="Lucene-test" depends="test-build">
		<echo>=== Running Lucene 2.9 Perf ===</echo>
		<java fork="true" classname="com.browseengine.bobo.test.LucenePerfTest">
                        <jvmarg value="-d64" />
                        <jvmarg value="-server" />
                        <jvmarg value="-Xms8g" />
                        <jvmarg value="-Xmx10g" />
<jvmarg value="-XX:+UseConcMarkSweepGC"/>
<jvmarg value="-XX:+UseParNewGC"/>                      
<jvmarg value="-XX:CMSMarkStackSize=32m"/>
<jvmarg value="-XX:MaxTenuringThreshold=2"/>
<jvmarg value="-XX:CMSInitiatingOccupancyFraction=70"/>
<jvmarg value="-XX:+PrintTenuringDistribution"/>
<jvmarg value="-XX:+PrintGCDetails"/>
<jvmarg value="-XX:+PrintGCTimeStamps"/>
<jvmarg value="-Xloggc:gc.log"/>
<jvmarg value="-XX:NewSize=1536m"/>
<jvmarg value="-XX:MaxNewSize=1536m"/>
<classpath refid="test.compile.class.path"/>
		</java>
	</target>
</project>
